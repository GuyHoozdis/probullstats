name: ci-cd

on: [push, pull_request]

jobs:
  lint:
    name: Linting and Style Checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        architecture: x64
    - run: pipx install poetry
    - run: pipx install nox
    - run: nox --session lint style

  ci:
    needs: [lint]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.11", "3.10", "3.9"]
    name: Python ${{ matrix.python-version }} Test Suite and Acceptance Tests
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install Poetry
      run: pipx install poetry

    - name: Install Nox
      run: pipx install nox

    - name: Static Type Checking
      run: nox --session mypy-${{ matrix.python-version }}

    - name: Test Suite
      run: nox --stop-on-first-error --session test-suite-${{ matrix.python-version }}

    - name: Acceptance Tests
      run: nox --stop-on-first-error --session acceptance-${{ matrix.python-version }}

  cd:
    needs: ci
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    outputs:
      released: ${{ steps.release.outputs.released }}
    steps:
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Check-out repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Poetry
      run: pipx install poetry

    - name: Install Nox
      run: pipx install nox

    - name: Use Python Semantic Release to prepare release
      id: release
      run: |
        echo "Do this now or do we wait until we do a release?"

    - name: Publish to TestPyPi
      run: |
        echo "The local version is $(poetry version)"
        poetry build
        poetry publish --repository=testpypi --username=__token__ --password=${{ secrets.TESTPYPI_TOKEN }}
        pip index versions \
          --index-url https://test.pypi.org/simple/ \
          probullstats

    - name: Test install from TestPyPI
      run: nox -k testpypi

    - name: Publish to PyPI
      if: steps.release.outputs.released == 'true'
      run: |
        echo "Waiting for approval on the organization from PyPI."

    - name: Publish package distributions to GitHub Releases
      if: steps.release.outputs.released == 'true'
      run: |
        echo "Go over these steps again and ensure that"
        echo "the build artifacts being created are the"
        echo "same that are being tested, published to"
        echo "the package indexes, and here."
