name: ci-cd

on: [push, pull_request, workflow_dispatch]

jobs:
  lint:
    name: Linting and Style Checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        architecture: x64
    - run: pipx install poetry
    - run: pipx install nox
    - run: nox --session lint style

  ci:
    needs: [lint]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.11", "3.10", "3.9"]
    name: Python ${{ matrix.python-version }} Test Suite and Acceptance Tests
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install Poetry
      run: pipx install poetry

    - name: Install Nox
      run: pipx install nox

    - name: Static Type Checking
      run: nox --session mypy-${{ matrix.python-version }}

    - name: Test Suite
      run: nox --stop-on-first-error --session test-suite-${{ matrix.python-version }}

    - name: Acceptance Tests
      run: nox --stop-on-first-error --session acceptance-${{ matrix.python-version }}

  cd:
    permissions:
      id-token: write
      contents: write

    needs: ci
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Check-out repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Poetry
      run: pipx install poetry

    - name: Install Nox
      run: pipx install nox

    - name: Use Python Semantic Release to prepare release
      id: release
      uses: python-semantic-release/python-semantic-release@v9.8.6
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to TestPyPi
      uses: pypa/gh-action-pypi-publish@v1.9.0
      if: steps.release.outputs.released == 'true'
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TESTPYPI_TOKEN }}

    - name: Test install from TestPyPI
      run: nox -k testpypi

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@v1.9.0
      if: steps.release.outputs.released == 'true'
      with:
        repository-url: https://pypi.org/legacy/
        password: ${{ secrets.PYPI_TOKEN }}

    - name: Publish package distributions to GitHub Releases
      uses: python-semantic-release/upload-to-gh-release@v9.8.6
      if: steps.release.outputs.released == 'true'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ steps.release.outputs.tag }}
